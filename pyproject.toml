[tool.poetry]
name = "django-for-runners"
version = "0.13.0.rc0"
description = "Store your GPX tracks of your running (or other sports activity) in django."
homepage = "https://github.com/jedie/django-for-runners"
authors = ["JensDiemer <git@jensdiemer.de>"]
packages = [
    { include = "for_runners" },
    { include = "for_runners_project" },
]
keywords=['running','gpx','gps-tracking','gps-data','django']
classifiers = [
    # http://pypi.python.org/pypi?%3Aaction=list_classifiers
    "Development Status :: 4 - Beta",
    #"Development Status :: 5 - Production/Stable",
    "Environment :: Web Environment",
    "Intended Audience :: End Users/Desktop",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3 :: Only",
    'Framework :: Django',
    "Topic :: Database :: Front-Ends",
    "Topic :: Documentation",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Internet :: WWW/HTTP :: Site Management",
    "Topic :: Internet :: WWW/HTTP :: WSGI :: Application",
    "Operating System :: OS Independent",
]
include = ['AUTHORS', 'LICENSE', 'README.creole']

# Will be generated from README.creole with: 'poetry run update_rst_readme'
readme='README.rst'
license = "GPL"

[tool.poetry.dependencies]
# Keep Python 3.7 until Yunohost contains a newer Python Version ;)
python = ">=3.7,<4.0.0"
click = "*"  # https://github.com/mitsuhiko/click
colorlog = "*"  # https://github.com/borntyping/python-colorlog
gunicorn = "*"  # https://github.com/benoimyproject.wsgitc/gunicorn
#
# https://www.djangoproject.com/download/#supported-versions
# v2.2 LTS - extended support until April 2022
django = "2.2.*"
django-processinfo = "*"  # https://github.com/jedie/django-processinfo/
django-debug-toolbar = "*"  # http://django-debug-toolbar.readthedocs.io/en/stable/changes.html
django-tools = "*"  # https://github.com/jedie/django-tools/
django-import-export = "*"  # https://github.com/django-import-export/django-import-export
autotask = "*"  # https://bitbucket.org/kbr/autotask
gpxpy = "*" # https://github.com/tkrajina/gpxpy
matplotlib = "*"  # http://matplotlib.org/
svgwrite = "*"  # http://github.com/mozman/svgwrite.git
geopy = "*"  # https://github.com/geopy/geopy
lxml = "*"
django-dbbackup = "*"  # https://github.com/django-dbbackup/django-dbbackup
requests = "*"  # https://github.com/psf/requests
bx_py_utils = "*"  # https://github.com/boxine/bx_py_utils
bx_django_utils = "*"  # https://github.com/boxine/bx_django_utils
django-axes = "*"  # https://github.com/jazzband/django-axes
docker-compose = { version = "*", optional = true }  # install via: poetry install --extras "docker"
psycopg2-binary = { version = "*", optional = true }  # install via: poetry install --extras "postgres"

[tool.poetry.extras]
docker = ["docker-compose"]
postgres = ["psycopg2-binary"]

[tool.poetry.dev-dependencies]
poetry-publish = "*"  # https://github.com/jedie/poetry-publish
python-creole = "*"  # https://github.com/jedie/python-creole
tox = "*"
pytest = "*"
pytest-randomly = "*"
pytest-cov = "*"
pytest-django = "*"
pytest-parallel = "*"
selenium = "*"
django-dynamic-fixtures = "*"  # https://github.com/Peter-Slump/django-dynamic-fixtures
pytest-darker = "*"  # https://github.com/akaihola/pytest-darker
pytest-flake8 = "*"
pytest-isort = "*"
coveralls = "*"
isort = "*"
flake8 = "*"
flynt = "*"
darker = "*"  # https://github.com/akaihola/darker
pyupgrade = "*"
model_bakery = "*"  # https://github.com/model-bakers/model_bakery
requests-mock = "*"
django-override-storage = "*"  # https://github.com/danifus/django-override-storage

[tool.poetry.scripts]
manage = "for_runners_project.manage:main"
update_rst_readme = "for_runners_project.publish:update_readme"
publish = "for_runners_project.publish:publish"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"


[tool.darker]
src = ['.']
revision = "origin/main..."
line_length = 100
verbose = true
skip_string_normalization = true
diff = false
check = false
stdout = false
isort = true
lint = [
    "flake8",
]
log_level = "INFO"


[tool.flynt]
line_length = 100


[tool.isort]
# https://pycqa.github.io/isort/docs/configuration/config_files/#pyprojecttoml-preferred-format
atomic=true
profile='black'
line_length=100
skip_glob=["*/htmlcov/*","*/migrations/*"]
known_first_party=["for_runners", "for_runners_project"]
lines_after_imports=2


[tool.pytest.ini_options]
# https://docs.pytest.org/en/latest/customize.html#pyproject-toml
minversion = "6.0"
DJANGO_SETTINGS_MODULE="for_runners_project.settings.tests"
norecursedirs = ".* .git __pycache__ coverage* dist htmlcov volumes migrations"
# sometimes helpfull "addopts" arguments:
#    -vv
#    --verbose
#    --capture=no
#    --trace-config
#    --full-trace
#    -p no:warnings
addopts = """
    --reuse-db
    --nomigrations
    --cov=.
    --cov-report term-missing
    --cov-report html
    --cov-report xml
    --no-cov-on-fail
    --showlocals
    --darker
    --flake8
    --isort
    --doctest-modules
    --failed-first
    --last-failed-no-failures all
    --new-first
"""
# TODO: --mypy

[tool.tox]
# https://tox.readthedocs.io/en/latest/example/basic.html#pyproject-toml-tox-legacy-ini
legacy_tox_ini = """
[tox]
isolated_build = True
envlist = px310,py39,py38,py37
skip_missing_interpreters = True

[testenv]
whitelist_externals = pytest
commands =
    pytest --workers auto --tests-per-worker 1 --pyargs for_runners for_runners_project
"""
